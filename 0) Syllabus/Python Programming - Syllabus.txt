Python Programming - Syllabus:

Subject 0: Problem Solving
A) Algorithm
B) Flow Chart
C) Pseudo Code
D) Programming Language
E) Algorithmic Problem Solving

Subject 1: Python Programming
A) Procedural Programming:
1) Python - Info
2) IDE - Installation, Program Execution (IDLE, VSCode, Pycharm, Google Colab, Jupyter Notebook, etc.)
3) Input, Output Functions (Human Computer Interaction)
4) Comments, DocString
5) Physical, Logical Lines, Indentation, Whitespace
6) Tokens 
6.1) Identifiers, Variables - Rules, Multi Words Name, Type Casting
6.2) Keywords
6.3) Delimiters
6.4) Datatypes (Literals)
6.5) Operators
7) Control Flow
7.1) Sequential Statement
7.2) Branching Statements - if, if else, elif, nested if else, match case
7.3) Looping Statements - for, while, nested for, nested while
7.2.1) Jump Statements - break, continue, pass
8) Exceptional Handling
8.1) Statements - Normal, Critical
8.2) Errors - Logical, Compile Time, Run Time
8.3) Handling Blocks - try, except, finally, custom except, raise, assert
9) Special Variable - __name__, __main__
**Example Programs:** odd/even, +ve/-ve, largest/smallest of 3, factorial, fibonacci, prime/composite

B) Functional Programming:
1) Functions - Definition, Call, DocString Statement, Return Statement, Parameters, Arguments
2) Function Prototypes (Argument, Return Value) - Function Types
4) Types Of Parameters - Formal, Actual
5) Types Of Arguments - Fixed, Variable
6) Parameter Passing Methods - Call By Value, Call By Reference
7) Scope Of Variables (LEGB Rule) - Global, Local, Enclosed, Built-In
8) Function Composition, Built-In Functions (type, len, sort, min, max, sum, int, float, complex, string, list, tuple, set, dict)
9) Types Of Functions - 9.1) Built-In 9.2) User Defined 9.2.1) Normal 9.2.2) Nested 9.2.3) Recursive 9.2.4) Lambda (filetr, map reduce) 9.2.5) Wrappers (Decorators) 9.2.6) Generators
10) Modules, Packages, Libraries - Creation, Running (Import Statements), Types (Built=In, User Defined)
11) Built-In Modules - math, random, os, sys, calendar, time, datetime, string, numbers
12) Package Manager, PIP, Commands
13) Popular Libraries - numpy, pandas, matplotlib, seaborn, scikit-kearn, tensorflow, keras, pytorch, opencv, scipy, nltk, chatterbot, django, flask, fastapi, pygame, kivy, selenium
14) Applications - Web Development, DSAI, NLP, CV, Automation, GUI, Chatbot, Ethical Hacking

C) Object Oriented Programming:
1) Classes - Definition, Creation, Namespace, Class Members - Attributes, Methods (Types)
2) Objects - Class Instantiation, Object Members
3) Constructors, Destructors
4) Encapsulation (Access Specifier) - public, private, protected
5) Abstraction - Abstract Class, Abstract Method, Interfaces
6) Inheritance - Single, Multiple, Multilevel, Hierarchical, Hybrid, super method, isinstance method, MRO
7) Polymorphism - Duck Typing, Operator Overloading, Method Overloading, Method Overriding
8) Magical Methods
9) Iterators
